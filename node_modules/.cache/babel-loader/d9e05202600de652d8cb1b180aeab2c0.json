{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vadym\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\react-weather-forecast\\\\src\\\\components\\\\WeatherHeader\\\\WeatherHeader.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { getWeatherByCityName } from '../api/api';\nimport './WeatherHeader.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherHeader = ({\n  onCitySelect\n}) => {\n  _s();\n\n  const [language, setLanguage] = useState('ru');\n  const [city, setCity] = useState('');\n  const [selectedCityWeather, setselectedCityWeather] = useState(null);\n\n  const handleInput = event => {\n    setCity(event.target.value);\n  };\n\n  const handleLanguage = event => {\n    setLanguage(event.target.value);\n    console.log(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    getWeatherByName();\n\n    if (selectedCityWeather === null) {\n      console.log('loading...........');\n    } else {\n      onCityChange(selectedCityWeather);\n    }\n  };\n\n  const getWeatherByName = async () => {\n    const weahterFromServer = await getWeatherByCityName(city, 'metric');\n    setselectedCityWeather(weahterFromServer);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"querry\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"querry__form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"query__input\",\n        type: \"text\",\n        value: city,\n        onChange: handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"query__submit\",\n        type: \"submit\",\n        value: \"Submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"query__language\",\n      name: \"language\",\n      value: language,\n      onChange: handleLanguage,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"en\",\n        children: \"En\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"ru\",\n        children: \"Ru\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"ua\",\n        children: \"Ua\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WeatherHeader, \"YnWgMBRElL4ho2PJ1dnBlLGI8HM=\");\n\n_c = WeatherHeader;\nexport default WeatherHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherHeader\");","map":{"version":3,"sources":["C:/Users/vadym/OneDrive/Рабочий стол/react-weather-forecast/src/components/WeatherHeader/WeatherHeader.jsx"],"names":["React","useState","getWeatherByCityName","WeatherHeader","onCitySelect","language","setLanguage","city","setCity","selectedCityWeather","setselectedCityWeather","handleInput","event","target","value","handleLanguage","console","log","handleSubmit","preventDefault","getWeatherByName","onCityChange","weahterFromServer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,oBAAT,QAAqC,YAArC;AACA,OAAO,qBAAP;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAAA;;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAmBP,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACQ,mBAAD,EAAsBC,sBAAtB,IAAiDT,QAAQ,CAAC,IAAD,CAA/D;;AAEA,QAAMU,WAAW,GAAIC,KAAD,IAAW;AAC7BJ,IAAAA,OAAO,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAIH,KAAD,IAAW;AAChCN,IAAAA,WAAW,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACC,MAAN,CAAaC,KAAzB;AACD,GAHD;;AAKA,QAAMI,YAAY,GAAIN,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACO,cAAN;AACAC,IAAAA,gBAAgB;;AAChB,QAAGX,mBAAmB,KAAK,IAA3B,EAAgC;AAC9BO,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,KAFD,MAEO;AACLI,MAAAA,YAAY,CAACZ,mBAAD,CAAZ;AACD;AACF,GARD;;AAUA,QAAMW,gBAAgB,GAAG,YAAW;AAClC,UAAME,iBAAiB,GAAG,MAAMpB,oBAAoB,CAACK,IAAD,EAAO,QAAP,CAApD;AAEAG,IAAAA,sBAAsB,CAACY,iBAAD,CAAtB;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,QAAQ,EAAEJ,YAFZ;AAAA,8BAII;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAEX,IAHT;AAIE,QAAA,QAAQ,EAAEI;AAJZ;AAAA;AAAA;AAAA;AAAA,cAJJ,eAUI;AACE,QAAA,SAAS,EAAC,eADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,KAAK,EAAC,QAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAmBE;AACA,MAAA,SAAS,EAAC,iBADV;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAEN,QAHT;AAIE,MAAA,QAAQ,EAAEU,cAJZ;AAAA,8BAME;AACE,QAAA,KAAK,EAAC,IADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAWE;AACE,QAAA,KAAK,EAAC,IADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAgBE;AACE,QAAA,KAAK,EAAC,IADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD,CA1ED;;GAAMZ,a;;KAAAA,a;AA4EN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport { getWeatherByCityName } from '../api/api';\nimport './WeatherHeader.css'\n\nconst WeatherHeader = ({ onCitySelect }) => {\n  const [language, setLanguage] = useState('ru')\n  const [city, setCity ] = useState('')\n  const [selectedCityWeather, setselectedCityWeather ] = useState(null);\n\n  const handleInput = (event) => {\n    setCity(event.target.value);\n  }\n\n  const handleLanguage = (event) => {\n    setLanguage(event.target.value)\n    console.log(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    getWeatherByName();\n    if(selectedCityWeather === null){\n      console.log('loading...........')\n    } else {\n      onCityChange(selectedCityWeather);\n    }\n  }\n\n  const getWeatherByName = async() => {\n    const weahterFromServer = await getWeatherByCityName(city, 'metric')\n\n    setselectedCityWeather(weahterFromServer)\n  }\n\n  return (\n    <div className=\"querry\">\n      <form\n        className=\"querry__form\"\n        onSubmit={handleSubmit}\n      >\n          <input \n            className=\"query__input\"\n            type=\"text\"\n            value={city}\n            onChange={handleInput}\n          />\n          <button \n            className=\"query__submit\"\n            type=\"submit\" \n            value=\"Submit\"\n          >\n            Add\n          </button>\n      </form>\n      <select\n      className=\"query__language\"\n        name=\"language\"\n        value={language}\n        onChange={handleLanguage}\n      >\n        <option\n          value=\"en\"\n        >\n          En\n        </option>\n        <option\n          value=\"ru\"\n        >\n          Ru\n        </option>\n        <option\n          value=\"ua\"\n        >\n          Ua\n        </option>\n      </select>\n    </div>\n  )\n}\n\nexport default WeatherHeader;\n"]},"metadata":{},"sourceType":"module"}