{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vadym\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\react-weather-forecast\\\\src\\\\components\\\\WeatherComponent\\\\WeatherComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"./WeatherComponent.css\";\nimport ForecastleChart from '../ForecastleChart/ForecastleChart';\nimport { getWeatherByCityName, getWeatherByPosition } from '../api/api';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherComponent = ({\n  cityFromForm\n}) => {\n  _s();\n\n  const [weather, setWeather] = useState(null);\n  const [city, setCity] = useState(null);\n  useEffect(() => {\n    console.log('By city coord: ', city);\n    getWeatherData();\n  }, []);\n  useEffect(() => {\n    console.log('By city name: ', city);\n    getWeatherDataByCity();\n  }, [cityFromForm]);\n\n  const getWeatherDataByCity = async () => {\n    setCity(cityFromForm);\n\n    if (!weather && city) {\n      const dataFromServer = await getWeatherByCityName(city, 'metric');\n      console.log('Data from server with new Name: ', city);\n      let weatherData = {\n        id: uuidv4(),\n        cityName: dataFromServer.name,\n        counrty: dataFromServer.sys.country,\n        desciption: dataFromServer[\"weather\"][0].main,\n        icon: dataFromServer[\"weather\"][0].icon,\n        temperature: dataFromServer.main.temp,\n        humidity: dataFromServer.main.humidity,\n        pressure: dataFromServer.main.pressure,\n        feels_like: dataFromServer.main.feels_like,\n        wind: dataFromServer.wind.speed\n      };\n      localStorage.setItem('city', JSON.stringify(weatherData));\n      setWeather(weatherData);\n    }\n  };\n\n  const getWeatherData = async () => {\n    navigator.geolocation.getCurrentPosition(showPosition);\n\n    if (!weather && city) {\n      const dataFromServer = await getWeatherByCityName(city, 'metric');\n      let weatherData = {\n        id: uuidv4(),\n        cityName: dataFromServer.name,\n        counrty: dataFromServer.sys.country,\n        desciption: dataFromServer[\"weather\"][0].main,\n        icon: dataFromServer[\"weather\"][0].icon,\n        temperature: dataFromServer.main.temp,\n        humidity: dataFromServer.main.humidity,\n        pressure: dataFromServer.main.pressure,\n        feels_like: dataFromServer.main.feels_like,\n        wind: dataFromServer.wind.speed\n      };\n      localStorage.setItem('city', JSON.stringify(weatherData));\n      setWeather(weatherData);\n    }\n\n    console.log('City: ', city);\n  };\n\n  const showPosition = async position => {\n    const cityName = await getWeatherByPosition(position.coords.latitude, position.coords.longitude, 'metric');\n    setCity(cityName.name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast__close\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"forecast__close-button\",\n          type: \"button\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecat__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast__left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast__city\",\n            children: weather && `${weather.cityName}, ${weather.counrty}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast__data\",\n            children: `${new Date().toLocaleString('en-us', {\n              weekday: 'short'\n            })} , \n                ${new Date().getDay()} \n                ${new Date().toLocaleString('default', {\n              month: 'long'\n            })} , \n                ${new Date().getHours()}:${new Date().getMinutes()}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast__right\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast__description\",\n            children: [weather && /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                width: \"50px\",\n                marginRight: \"10px\"\n              },\n              src: `https://openweathermap.org/img/wn/${weather.icon}@2x.png`,\n              alt: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this), weather && `${weather.desciption}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast__body\",\n        children: weather && /*#__PURE__*/_jsxDEV(ForecastleChart, {\n          weather: weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast__foter\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecat__foter-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast__temperature\",\n            children: weather && `${weather.temperature}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast__fill\",\n            children: weather && `Feels like: ${weather.feels_like}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast__footer-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast__wind\",\n            children: weather && `Wind: ${weather.wind} m/s`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast__humidity\",\n            children: weather && `Humidity: ${weather.humidity}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast__pressure\",\n            children: weather && `Pressure: ${weather.pressure}Pa`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WeatherComponent, \"I/hKhVZC4NVc/Sotn2TD08u/WhA=\");\n\n_c = WeatherComponent;\nexport default WeatherComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherComponent\");","map":{"version":3,"sources":["C:/Users/vadym/OneDrive/Рабочий стол/react-weather-forecast/src/components/WeatherComponent/WeatherComponent.jsx"],"names":["React","useEffect","useState","ForecastleChart","getWeatherByCityName","getWeatherByPosition","v4","uuidv4","WeatherComponent","cityFromForm","weather","setWeather","city","setCity","console","log","getWeatherData","getWeatherDataByCity","dataFromServer","weatherData","id","cityName","name","counrty","sys","country","desciption","main","icon","temperature","temp","humidity","pressure","feels_like","wind","speed","localStorage","setItem","JSON","stringify","navigator","geolocation","getCurrentPosition","showPosition","position","coords","latitude","longitude","Date","toLocaleString","weekday","getDay","month","getHours","getMinutes","width","marginRight"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport \"./WeatherComponent.css\";\nimport ForecastleChart from '../ForecastleChart/ForecastleChart';\nimport { getWeatherByCityName, getWeatherByPosition } from '../api/api';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst WeatherComponent = ({ cityFromForm }) => {\n  const [weather, setWeather] = useState(null)\n  const [city, setCity] = useState(null)\n \n  useEffect(() => {\n    console.log('By city coord: ', city)\n    getWeatherData();\n  }, []);\n\n  useEffect(() => {\n    console.log('By city name: ', city)\n    getWeatherDataByCity();\n  }, [cityFromForm])\n\n  const getWeatherDataByCity = async() => {\n    setCity(cityFromForm)\n    \n    if(!weather && city) {\n    const dataFromServer = await getWeatherByCityName(city, 'metric');\n    console.log('Data from server with new Name: ', city)\n    let weatherData = {\n      id: uuidv4(),\n      cityName: dataFromServer.name,\n      counrty: dataFromServer.sys.country,\n      desciption: dataFromServer[\"weather\"][0].main,\n      icon: dataFromServer[\"weather\"][0].icon,\n      temperature: dataFromServer.main.temp,\n      humidity: dataFromServer.main.humidity,\n      pressure: dataFromServer.main.pressure, \n      feels_like: dataFromServer.main.feels_like,\n      wind: dataFromServer.wind.speed\n    }\n    localStorage.setItem('city', JSON.stringify(weatherData))\n\n    setWeather(weatherData);\n    }\n  }\n  \n  const getWeatherData = async() => {\n    navigator.geolocation.getCurrentPosition(showPosition);\n\n  if(!weather && city) {\n    const dataFromServer = await getWeatherByCityName(city, 'metric');\n\n      let weatherData = {\n      id: uuidv4(),\n      cityName: dataFromServer.name,\n      counrty: dataFromServer.sys.country,\n      desciption: dataFromServer[\"weather\"][0].main,\n      icon: dataFromServer[\"weather\"][0].icon,\n      temperature: dataFromServer.main.temp,\n      humidity: dataFromServer.main.humidity,\n      pressure: dataFromServer.main.pressure, \n      feels_like: dataFromServer.main.feels_like,\n      wind: dataFromServer.wind.speed\n    }\n    localStorage.setItem('city', JSON.stringify(weatherData))\n\n    setWeather(weatherData);\n  }\n  console.log('City: ', city)\n}\n\n  const showPosition = async(position) => {\n    const cityName = await getWeatherByPosition(position.coords.latitude, position.coords.longitude, 'metric');\n    setCity(cityName.name);\n  }\n \n  return (\n    <div className=\"container\">\n      <div className=\"forecast-card\">\n        <div className=\"forecast__close\">\n            <button className=\"forecast__close-button\" type=\"button\">\n                X\n            </button>\n        </div>\n        <div className=\"forecat__header\">\n          <div className=\"forecast__left\">\n            <div className=\"forecast__city\">\n              {weather && `${weather.cityName}, ${weather.counrty}`}\n            </div>\n            <div className=\"forecast__data\">\n              {`${new Date().toLocaleString('en-us', {  weekday: 'short' })} , \n                ${new Date().getDay()} \n                ${new Date().toLocaleString('default', { month: 'long' })} , \n                ${new Date().getHours()}:${new Date().getMinutes()}`\n              }\n            </div>\n          </div>\n          <div className=\"forecast__right\">\n          <div className=\"forecast__description\">\n            {weather && <img style={{width: \"50px\", marginRight:\"10px\"}} src={`https://openweathermap.org/img/wn/${weather.icon}@2x.png`} alt=\"icon\"></img>}\n            {weather && `${weather.desciption}`}\n            </div>\n          </div>\n        </div>\n        <div className=\"forecast__body\">\n          {weather && <ForecastleChart weather={weather} />}\n        </div>\n        <div className=\"forecast__foter\">\n          <div className=\"forecat__foter-left\">\n            <div className=\"forecast__temperature\">\n              {weather && `${weather.temperature}`}\n            </div>\n            <div className=\"forecast__fill\">\n              {weather && `Feels like: ${weather.feels_like}`}\n            </div>\n          </div>\n          <div className=\"forecast__footer-right\">\n            <div className=\"forecast__wind\">\n              {weather && `Wind: ${weather.wind} m/s`}\n            </div>\n            <div className=\"forecast__humidity\">\n              {weather && `Humidity: ${weather.humidity}%`}\n            </div>\n            <div className=\"forecast__pressure\">\n              {weather && `Pressure: ${weather.pressure}Pa`}\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  )\n}\n\nexport default WeatherComponent\n"]},"metadata":{},"sourceType":"module"}